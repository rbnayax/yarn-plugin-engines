/* eslint-disable */
//prettier-ignore
module.exports = {
name: "@yarnpkg/plugin-engines",
factory: function (require) {
var plugin=(()=>{var d=Object.defineProperty;var w=Object.getOwnPropertyDescriptor;var C=Object.getOwnPropertyNames;var P=Object.prototype.hasOwnProperty;var s=(t=>typeof require<"u"?require:typeof Proxy<"u"?new Proxy(t,{get:(r,e)=>(typeof require<"u"?require:r)[e]}):t)(function(t){if(typeof require<"u")return require.apply(this,arguments);throw new Error('Dynamic require of "'+t+'" is not supported')});var k=(t,r)=>{for(var e in r)d(t,e,{get:r[e],enumerable:!0})},j=(t,r,e,o)=>{if(r&&typeof r=="object"||typeof r=="function")for(let n of C(r))!P.call(t,n)&&n!==e&&d(t,n,{get:()=>r[n],enumerable:!(o=w(r,n))||o.enumerable});return t};var N=t=>j(d({},"__esModule",{value:!0}),t);var T={};k(T,{default:()=>b});var i=s("@yarnpkg/core");var p=class{project;errorReporter;constructor(r){this.project=r.project,this.errorReporter=r.errorReporter}throwWrongEngineError=(r,e)=>{let o=this.formatErrorMessage(r,e);this.throwError(o)};throwError=r=>{switch(this.errorReporter){case"Yarn":this.reportYarnError(r);break;case"Console":default:this.reportConsoleError(r);break}};reportYarnError=r=>{throw new i.ReportError(i.MessageName.UNNAMED,r)};reportConsoleError=r=>{console.error(r),process.exit(1)};formatErrorMessage=(r,e)=>{let{configuration:o}=this.project,n=i.formatUtils.applyStyle(o,i.formatUtils.pretty(o,this.engine,"green"),2),c=i.formatUtils.pretty(o,r,"cyan"),h=i.formatUtils.pretty(o,e,"cyan"),R=`The current ${n} version ${c} does not satisfy the required version ${h}.`;return i.formatUtils.pretty(o,R,"red")}};var f=s("fs"),E=s("path"),l=s("semver"),u=s("@yarnpkg/fslib"),a=s("@yarnpkg/core");var g=class extends p{get engine(){return"Node"}verifyEngine(r){let e=r.node;e!=null&&(e===".nvmrc"&&(e=this.resolveNvmRequiredVersion()),(0,l.satisfies)(process.version,e,{includePrerelease:!0})||this.throwWrongEngineError(process.version.replace(/^v/i,""),e.replace(/^v/i,"")))}resolveNvmRequiredVersion=()=>{let{configuration:r,cwd:e}=this.project,o=(0,E.resolve)(u.npath.fromPortablePath(e),".nvmrc"),n=a.formatUtils.applyStyle(r,a.formatUtils.pretty(r,this.engine,"green"),2);if(!(0,f.existsSync)(o)){this.throwError(a.formatUtils.pretty(r,`Unable to verify the ${n} version. The .nvmrc file does not exist.`,"red"));return}let c=(0,f.readFileSync)(o,"utf-8").trim();if((0,l.validRange)(c))return c;let h=a.formatUtils.pretty(r,".nvmrc","yellow");this.throwError(a.formatUtils.pretty(r,`Unable to verify the ${n} version. The ${h} file contains an invalid semver range.`,"red"))}};var y=s("semver"),v=s("@yarnpkg/core");var m=class extends p{get engine(){return"Yarn"}verifyEngine(r){let e=r.yarn;e!=null&&((0,y.satisfies)(v.YarnVersion,e,{includePrerelease:!0})||this.throwWrongEngineError(v.YarnVersion,e))}};var x=t=>r=>{if(process.env.PLUGIN_YARN_ENGINES_DISABLE!=null)return;let{engines:e={}}=r.getWorkspaceByCwd(r.cwd).manifest.raw,o={project:r,errorReporter:t};[new g(o),new m(o)].forEach(c=>c.verifyEngine(e))},Y={hooks:{validateProject:x("Yarn"),setupScriptEnvironment:x("Console")}},b=Y;return N(T);})();
return plugin;
}
};
